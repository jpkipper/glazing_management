// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model itm_types {
    id                  Int                 @id @default(autoincrement())
    state               Int
    ref_category        Int
    base_categories     base_categories     @relation(fields:[ref_category], references:[id])
    ref_owner           Int
    user                User                @relation(fields:[ref_owner], references:[id])
    name                String
    info                String
    ref_serial          Int
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
}

model itm_fields {
    id          Int             @id @default(autoincrement())
    ref_type    Int
    type        itm_types       @relation(fields:[ref_type], references:[id])
    label       String
    position    Int
    data_type   Int
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model Item {
    id          Int             @id @default(autoincrement())
    ref_owner   Int
    user        User            @relation(fields:[ref_owner], references:[id])
    ref_type    Int
    type        itm_types       @relation(fields:[ref_type], references:[id])
    state       Int
    name        String
    serial      String
    description String
    value       Float
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model itm_values {
    id          Int         @id @default(autoincrement())
    ref_item    Int
    item        Item        @relation(fields:[ref_item], references:[id])
    ref_field   Int
    field       itm_fields  @relation(fields:[ref_field], references:[id])
    content     String
    type        Int
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}

model itm_stock {
    id          Int         @id @default(autoincrement())
    ref_item    Int 
    item        Item        @relation(fields: [ref_item], references:[id])
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}

model prod_types {
    id                  Int                 @id @default(autoincrement())
    state               Int
    ref_category        Int
    base_categories     base_categories     @relation(fields:[ref_category], references:[id])
    user                User                @relation(fields:[ref_owner], references:[id])
    ref_owner           Int
    name                String
    info                String
    ref_serial          Int
    base_serials        base_serials        @relation(fields:[ref_serial], references:[id])
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
}

model prod_fields {
    id          Int         @id @default(autoincrement())
    ref_type    String
    type        prod_types  @relation(fields:[ref_type], references:[id])
    label       String
    postion     Int
    data_type   Int    
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}

model Product {
    id          Int             @id @default(autoincrement())
    ref_owner   Int
    user        User            @relation(fields:[ref_owner], references:[id])
    ref_type    Int
    type        prod_types      @relation(fields:[ref_type], references:[id])
    state       Int
    name        String
    serial      String
    description String
    value       Float
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model prod_values {
    id          Int             @id @default(autoincrement())
    ref_product Int
    product     Product         @relation(fields:[ref_product], references:[id])
    ref_field   Int
    field       prod_fields     @relation(fields:[ref_field], references:[id])
    content     String
    type        Int
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model prod_items_to_prod {
    id          Int             @id @default(autoincrement())
    ref_item    Int
    item        Item            @relation(fields:[ref_item], references:[id])
    ref_product Int
    product     Product         @relation(fields:[ref_product], references:[id])
    quantity    Int
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model base_categories {
    id          Int             @id @default(autoincrement())
    ref_owner   Int
    user        User            @relation(fields:[ref_owner], references:[id])
    name        String
    state       Int
    ref_module  Int
    ref_serial  Int
    serial      base_serials    @relation(fields:[ref_serial], references:[id])
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model base_serials {
    id              Int         @id @default(autoincrement())
    start_value     Int
    current_value   Int
    pattern         String
    name            String
    ref_module      Int
    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
}

model User {
    id          Int             @id @default(autoincrement())
    email       String
    name        String
    login       String
    password    String
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model Group {
    id          Int             @id @default(autoincrement())
    name        String
    level       Int
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model base_users_groups {
    id          Int             @id @default(autoincrement())
    ref_user    Int
    user        User            @relation(fields:[ref_user], references:[id])
    ref_group   Int
    group       Group           @relation(fields:[ref_group], references:[id])
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model Permission {
    id          Int             @id @default(autoincrement())
    name        String
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model base_group_permissions {
    id              Int                 @id @default(autoincrement())
    ref_group       Int
    group           Group               @relation(fields:[ref_group], references:[id])
    ref_permission  Int
    permission      Permission          @relation(fields:[ref_permission], references:[id])
    createdAt       DateTime            @default(now())
    updatedAt       DateTime            @updatedAt
}

model Provider {
    id                  Int                 @id @default(autoincrement())
    state               Int
    ref_owner           Int
    user                User                @relation(fields:[ref_owner], references:[id])
    public_name         String
    info                String
    uf                  String
    cep                 String
    legal_name          String
    cnpj                String
    address             String
    count               String
    company_owner       String
    company_owner_cpf   String
    city                String
    email               String
    phone               String
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
}

model Purchase {
    id          Int             @id @default(autoincrement())
    ref_item    Int
    item        Item            @relation(fields:[ref_item], references:[id])
    value       Float
    quantity    Int
    date        DateTime
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model sup_purchasing_suppliers {
    id              Int             @id @default(autoincrement())
    ref_provider    Int
    provider        Provider        @relation(fields:[ref_provider], references:[id])
    ref_purchase    Int
    purchase        Purchase        @relation(fields:[ref_purchase], references:[id])
    total           Float
    createdAt       DateTime        @default(now())
    updatedAt       DateTime        @updatedAt
}

model sup_provider_items {
    id              Int             @id @default(autoincrement())
    ref_item        Int
    item            Item            @relation(fields:[ref_item], references:[id])
    ref_provider    Int
    provider        Provider        @relation(fields:[ref_provider], references:[id])
    code            String
    createdAt       DateTime        @default(now())
    updatedAt       DateTime        @updatedAt
}

model Custumer {
    id          Int             @id @default(autoincrement())
    identity    Int
    ref_owner   Int
    user        User            @relation(fields:[ref_owner], references:[id])
    name        String
    info        String
    address     String
    uf          String
    email       String
    phone       String
    city        String
    cep         String
    county      String
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model Request {
    id              Int             @id @default(autoincrement())
    ref_custumer    Int
    custumer        Custumer        @relation(fields:[ref_custumer], references:[id])
    ref_owner       Int
    user            User            @relation(fields:[ref_owner], references:[id])
    value           Float
    dt_request      DateTime
    dt_delivery     DateTime
    delivered       Int
    createdAt       DateTime        @default(now())
    updatedAt       DateTime        @updatedAt
}

model crm_products_to_request {
    id          Int             @id @default(autoincrement())
    ref_request Int
    request     Request         @relation(fields:[ref_request], references:[id])
    ref_product Int
    product     Product         @relation(fields:[ref_product], references:[id])
    value       Float
    quantity    Int
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}
